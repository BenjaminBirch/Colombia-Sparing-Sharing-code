library(dplyr)
library(ggplot2)
library(sf)
library(reticulate)

# IMPORTANT: requires GEE account, Python installation, and setting up 
# authentification keys

## Set up GEE session ----
# point reticulate ``to the conda environment created in GEE_setup.sh
use_condaenv('gee_interface', conda = "auto", required = TRUE)
ee <- import("ee")          # Import the Earth Engine library
ee$Initialize()             # Trigger the authentication

#Get Colombia pts ----

DF <- distinct(Pasture, point, .keep_all = TRUE)

pts <- DF

# EE datasets ----

tc <- ee$Image("UMD/hansen/global_forest_change_2019_v1_7")
epsg <- ee$Projection('EPSG:4326')

## Extract Hansen treecover ----
# get 2000 treecover and loss metrics
tc2000 <- tc$select("treecover2000")
loss <- tc$select("lossyear")$unmask()

# functions for buffering and getting metrics
do_buffer <- function(x) {
  ee$Geometry$Point(c(pts$lon[x], pts$lat[x]))$buffer(buffer.width, max.error)
}

get_tc <- function(geometry_i) {
  reduced <- latlng$reduceRegion(reducer = ee$Reducer$toList(), 
                                 geometry = geometry_i,  
                                 maxPixels = 1e8, 
                                 scale = 30)
  as.data.frame(reduced$getInfo())
}

#* get buffers ----
buffer.width <- 1000 # radius, in meters
max.error <- 1 # maximum error (controls number of vertices), in meters
geomcircs <- lapply(1:nrow(pts), do_buffer)

#* create object ----
# note: for lat long coords, replace pixelCoordinates with pixelLonLat
latlng = ee$Image$pixelCoordinates(projection=epsg)$addBands(tc2000)$addBands(loss)

#* extract tc values ----
tcs <- lapply(geomcircs, get_tc)
tcs_df <- tcs %>%
  bind_rows(., .id = "id") %>%
  mutate(id = as.numeric(id), 
         point = pts$point[id])

#making binary column for treecover2000 (>50% = forest cover in 2000) and then adding a column for tree cover 2019

tcs_df <- tcs_df %>% mutate(forest2000 = as.integer(treecover2000>50))

tcs_df <- tcs_df %>% mutate(forest2019 = forest2000 - sign(lossyear))

#get example plots
tcs_df %>%
  # as.data.frame %>% 
  filter(id %in% 1:46) %>% 
  mutate(tc = cut(treecover2000, c(-.1, 25, 50, 75, 100.1), ordered=T)) %>%
  ggplot(aes(x, y, fill=tc)) + geom_tile() + 
  facet_wrap(~point, scales="free") +
  theme_bw() +
  theme(aspect.ratio=1, 
        strip.text=element_text(hjust=0, face="bold"), 
        strip.background = element_blank(), 
        panel.border = element_blank(), 
        panel.grid=element_blank(), 
        axis.text = element_blank(), 
        axis.ticks=element_blank()) +
  labs(x="", y="")

---- final plots
tiff("plot_wf.tiff", units="in", width=11.35, height=10.16, res=1000)
  tcs_df %>%
  # as.data.frame %>% 
  filter(id %in% 1:46) %>% 
  mutate(tc = cut(forest2019, c(0, 1), ordered=T)) %>%
  ggplot(aes(x, y, fill=tc)) + geom_tile() + 
  facet_wrap(~point, scales="free", ncol = 8) +
  theme_bw() +
  scale_fill_manual(values = c("darkolivegreen3")) +  
  theme(aspect.ratio=1, 
        strip.text=element_text(hjust=0, face="bold"), 
        strip.background = element_blank(), 
        panel.border = element_blank(), 
        panel.grid=element_blank(), 
        axis.text = element_blank(), 
        axis.ticks=element_blank()) +
  labs(x="", y="") +
       theme(text=element_text(size=17,  family="serif")) +
    theme(legend.position = "bottom", legend.justification = "center") +
    theme(legend.margin = margin(c(5, 5, 5, 0)),
          legend.text = element_text(margin = margin(r = 10, unit = "pt"))) +
    theme(legend.key.size = unit(1.5,"line")) +
    theme(legend.position = "none")
  dev.off()





